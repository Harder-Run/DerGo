English：
Windows 10 Pure Pro must be 64 bit

First, build the environment

1. Download VS2017, remember, don't download the rest of 2019

2. Download Anacoada3 5.0.1, no other version is available

3. Download Python 3.5.2, no other versions

4. Download CUDA9.0.176 CUDN7.0.5, no other version, install CUDA first
-----------------------------------------------------------------------------------------------------------------------------------------------------
1.After installing CUDA,C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\extras\CUPTI\libx64\cupti64_80.dll

Copy it to C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\bin to see if the variables in Figure 1-2 have been automatically added, then type the detection command CD into the installation directory... \extras\demo_suite, and then execute bandwidthtest.exe and devicequary.exe, respectively

2.VS2017 choose C++ development, Windows development, NET desktop development, Python on the line, as long as a single component SDK all selected on the line, direct installation

3.When installing Python 3.5.2, select Customize Installation and select AddPython 3.5.2 To Path and select 2015 Installation

4.When installing Anacoadn3, select Just Me and check Add Anaconda to My Path

5.Open Anacoada import window:

Conda --version shows conda 4.3.30

Conda info --envs shows toot c:\anaconda3

Conda Search -- Full-name Python View Version

Conda create --name tensorflow python=3.8.2

activate tensorflow

Conda info --envs Display TensorFlow envs

Python --version shows Python 3.5.2

deactivate

6.Install Tensorflow1.5 with Anacoada

activate tensorflow

pip install tensorflow-gpu==1.5.0

7.Confirm successful TensorFlow installation:

In CMD, type Python, and then import TensorFlow as TF

Sess = tf.session (config= tf.configproto (log_device_placement=True))
You should consider upgrading PIP via the 'python-m pip install --upgrade pip' comm in a new configuration
The input

python -m pip install --upgrade pip

Type pip show pip



If well, you are close to alchemy success step!
Keep reading

------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
Then there's alchemy

1.Pack the score files:

All the pieces to be used for training into a unified SGF format into a folder, open the DOS window into the folder where the pieces are placed Windows system input: copy *.sgf train.sgf

2.Generate training data:

Packed the score file xxx. SGF, lira engine leelaz.exe and an empty weight file into a folder. DOS window opens the folder and enter leelaz-g-w weight name.txt

Enter dump_supervised train.sgf train.out and wait for the generation to finish

Enter Exit to exit when the generated data is complete

3.Adjust training parameters:

111>self.RESIDUAL_FILTERS = 128. Residual_filters = 128

112>self.RESIDUAL_BLOCKS = 6 Adjust the network size of the training weights

177 > learning_rate = 0.05, momentum = 0.9, use_nesterov = True)

Adjust learning rate, momentum

Open training\tf\parse to adjust BATCH_SIZE = 512 video memory usage

4.Training weights:

After the completion of the above steps, there is no need to generate empty weights, network expansion and other operations for direct training

Put the training data in training\tf with the training programs in training\tf, or in another folder. Open this folder in the DOS or Anacoadn Import window

Activate the TensorFlow environment and enter Python Parse.py Train.Out

Wait for the program to start. Iteration will start after successful startup. After 8 iterations, the first weight file will be generated and then a weight will be generated every 8 iterations.

5.Generate initial null weight network expansion:

DOS window opens training\tf\

Type python3 net_to_model.py 20_192.txt

Generates an initial null weight of 20B-192F

DOS window opens training\tf\

Type python net2net.py 10 64 weight name.txt

Expand the existing weights

6.Restore training:

Start training from a batch at a breakpoint

The DOS window opens training/tf/

Enter python parse.py train.out in the full path leelaz-model-xxxxxx



中文：
必须window10纯净专业版64位

一、搭环境
1.下载VS2017，切记，不要下2019其他的
2.下载anacoada3 5.0.1，不能其他版本
3.下载python3.5.2，不能其他版本
4.下载cuda9.0.176  cudnn7.0.5，不能其他版本，先安装cuda
-----------------------------------------------------------------------------------------------------------------------------------------------------
1.安装CUDA后把C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\extras\CUPTI\libx64\cupti64_80.dll 
拷贝到C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\bin 查看图1-2中的变量是否已经自动添加，然后输入检测命令cd到安装目录下的 ...\extras\demo_suite,然后分别执行bandwidthTest.exe和deviceQuery.exe

2.VS2017选择C++开发，windows开发，net桌面开发，python就行了，单个组件只要SDK全部选上就行，直接点安装

3..安装python3.5.2时,选择customize installation 勾选addpython 3.5.2 to path 勾选2015 安装

4.安装anacoadn3时， 选just me 勾选add anaconda to my path安装

5.打开anacoada import窗口:
                         conda --version  显示conda 4.3.30
                         conda info --envs 显示toot  c:\anaconda3
                         conda search --full-name python 查看版本
                         conda create --name tensorflow python=3.8.2
                         activate tensorflow
                         conda info --envs  显示tensorflow envs
                         python --version   显示python3.5.2
                         deactivate

6.用anacoada安装tensorflow1.5      
                         activate tensorflow
                         pip install tensorflow-gpu==1.5.0

7.确认tensorflow安装成功： 
                       cmd里面键入python，然后键入import tensorflow as tf  
                       再输入sess = tf.Session(config=tf.ConfigProto(log_device_placement=True)) 
注意：如安装中系统提示 You should consider upgrading via the 'python -m pip install --upgrade pip' comm 是需要升级pip
输入
    python -m pip install --upgrade pip
输入 pip show pip


如果好了，你离炼丹成功近了一步！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！
继续往下看
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------
接下来，就是炼丹了

训练权重：
        
1.打包棋谱文件：
              将所有要用于训练的棋谱统一成sgf格式放进一个文件夹里，开启                 dos窗口进入放置棋谱的文件夹 Windows系统输入 :  copy *.sgf                train.sgf

2.生成训练数据：
              打包好的棋谱文件xxx.sgf，里拉引擎leelaz.exe和一个空权重                  文件放进一个文件夹里，dos窗口打开该文件夹输入leelaz -g -w                权重名.txt回车

              输入dump_supervised train.sgf train.out 等待生成结束
              输入exit  生成数据完成后退出

3.调整训练参数：
              用idle pythong打开training\tf\tfprocess调整                            111>self.RESIDUAL_FILTERS = 128
              112>self.RESIDUAL_BLOCKS = 6  调整训练权重的网络规模
              177>learning_rate=0.05, momentum=0.9, use_nesterov=True)
              调整学习率，动量
              打开training\tf\parse  调整BATCH_SIZE = 512 显存使用率

4.训练权重：
              完成上述步骤后如果直接训练就不需要生成空权重，扩网等操作
              讲训练数据和training\tf内的训练程序放在一起在training\tf里，或者其它文件夹里，在dos或anacoadn import窗口里打开该文件夹
              激活tensorflow环境后输入python parse.py train.out 
              等待程序启动，启动成功将开始迭代，8次迭代后生成第一个权重文件此后每8次迭代产生一个权重。

5.生成初始空权重扩网：
                     dos窗口打开training\tf\
                     输入python3 net_to_model.py 20_192.txt
                     生成一个初始空权重20B-192F
                     dos窗口打开training\tf\
                     输入python net2net.py 10 64 权重名.txt
                     将现有权重扩大

6.恢复训练：          
                     从某个断点的批次开始训练
                     dos窗口打开training/tf/  
                     输入python parse.py train.out 完整路径 leelaz-model-xxxxxx
